# Base image starts with NGC L4T
ARG BASE=r35.1.0-pth1.12
ARG BASE_IMG=nvcr.io/nvidia/l4t-pytorch:${BASE}-py3
FROM ${BASE_IMG} as base

# Removing any bazel or torch-tensorrt pre-installed from the base image
RUN rm -rf /opt/pytorch/torch_tensorrt /usr/bin/bazel

ARG ARCH="arm64"
ARG BAZEL_VERSION=5.2.0

RUN wget -q https://github.com/bazelbuild/bazel/releases/download/${BAZEL_VERSION}/bazel-${BAZEL_VERSION}-linux-${ARCH} -O /usr/bin/bazel \
 && chmod a+x /usr/bin/bazel

# Workaround for bazel expecting both static and shared versions, we only use shared libraries inside container
RUN touch /usr/lib/aarch64-linux-gnu/libnvinfer_static.a

# # Remove cuda symlink to avoid bazel circle symlink errors
# RUN rm /usr/local/cuda-11.7/cuda-11.7

WORKDIR /workspace
# COPY ./nv-tensorrt-local-repo-ubuntu2004-8.5.1-cuda-11.8_1.0-1_arm64.deb ./nv-tensorrt.deb
# RUN dpkg -i ./nv-tensorrt.deb \
#  && cp /var/nv-tensorrt-local-repo-ubuntu2004-8.5.1-cuda-11.8/nv-tensorrt-local-6431984C-keyring.gpg /usr/share/keyrings/

# Build Torch-TensorRT in an auxillary container
FROM base as torch-tensorrt-builder-base

# RUN apt-get install -y python3-setuptools
# RUN apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/3bf863cc.pub
# RUN apt-get update

RUN apt-get update \
 && apt-get install -y --no-install-recommends \
    locales \
    ninja-build \
 && rm -rf /var/lib/apt/lists/* \
 && locale-gen en_US.UTF-8

FROM torch-tensorrt-builder-base as torch-tensorrt-builder

ARG ARCH="arm64"

COPY . /workspace/torch_tensorrt/src
WORKDIR /workspace/torch_tensorrt/src
RUN cp ./docker/WORKSPACE.jp50 WORKSPACE

# This script builds both libtorchtrt bin/lib/include tarball and the Python wheel, in dist/
RUN ARCH=${ARCH} USE_CXX11=1 ./docker/dist-build.sh

# Copy and install Torch-TRT into the main container
FROM base as torch-tensorrt

COPY . /workspace/torch_tensorrt
COPY --from=torch-tensorrt-builder  /workspace/torch_tensorrt/src/py/dist/ .

RUN cp /workspace/torch_tensorrt/docker/WORKSPACE.jp50 /workspace/torch_tensorrt/WORKSPACE
RUN pip3 install *.whl \
 && rm -fr /workspace/torch_tensorrt/py/dist/* *.whl

RUN mkdir -p /opt/pytorch/ \
 && mv /workspace/torch_tensorrt /opt/pytorch/torch_tensorrt

# ENV LD_LIBRARY_PATH /usr/local/lib/python3.8/dist-packages/torch/lib:/usr/local/lib/python3.8/dist-packages/torch_tensorrt/lib:/usr/lib/x86_64-linux-gnu:${LD_LIBRARY_PATH}
# ENV PATH /usr/local/lib/python3.8/dist-packages/torch_tensorrt/bin:${PATH}

CMD /bin/bash
